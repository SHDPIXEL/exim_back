<!DOCTYPE html>
<html lang="en">
  <head>
    <% include ../partials/head %>
    <link
      href="../../datatables/jquery.dataTables.min.css"
      rel="stylesheet"
      type="text/css"
    />
    <link
      href="../../datatables/dataTables.bootstrap.css"
      rel="stylesheet"
      type="text/css"
    />
  </head>
  <body class="hold-transition skin-blue sidebar-mini">
    <div class="wrapper">
      <header class="main-header"><% include ../partials/header %></header>
      <aside class="main-sidebar"><% include ../partials/aside %></aside>

      <div class="content-wrapper">
        <section class="content-header">
          <h1>Manage Selected Media</h1>
        </section>

        <section class="content">
          <div class="row">
            <div class="col-md-12">
              <div class="box box-info">
                <div class="box-header">
                  <h3 class="box-title">Selected Media List</h3>
                </div>
                <div class="table-responsive">
                  <table class="display compact" id="ads_table">
                    <thead>
                      <tr>
                        <th>Sr. No.</th>
                        <th>Position</th>
                        <th>Start Date</th> <!-- New Column -->
                        <th>End Date</th>   <!-- New Column -->
                        <th>Images</th>
                        <th>Videos</th>
                        <th>Action</th>
                      </tr>
                    </thead>
                    <tbody></tbody>
                  </table>
                </div>
              </div>
            </div>
          </div>
        </section>
      </div>

      <footer class="main-footer"><% include ../partials/footer %></footer>
    </div>

    <% include ../partials/tail %>

    <script
      src="../../datatables/jquery.dataTables.js"
      type="text/javascript"
    ></script>
    <script src="../../bootbox/bootbox.min.js" type="text/javascript"></script>

    <script>
      $(document).ready(function () {
        var ajax_ads_table = $("#ads_table").DataTable({
          processing: true,
          serverSide: true,
          ajax: {
            type: "POST",
            url: "/adds/get_selected_Admin",
            data: function (d) {
              return JSON.stringify({
                page: d.start / d.length + 1, // Convert start index to page number
                limit: d.length, // Send the requested page size
              });
            },
            contentType: "application/json",
            dataSrc: function (json) {
              console.log("API Response:", json);
              return json.selectedAds || [];
            },
            error: function (xhr, status, error) {
              console.error("Error fetching ads:", error);
            },
          },
          columns: [
            { data: null },
            {
              data: "selectedMedia",
              render: function (data) {
                if (!data || data.length === 0)
                  return "<span>No position</span>";
                return data
                  .map((media) => `<strong>${media.position}</strong>`)
                  .join("<br>");
              },
            },
            {
              data: "selectedMedia",
              render: function (data) {
                if (!data || data.length === 0) return "N/A";
            
                // Extract first media item’s startDate (or update logic as needed)
                const firstMedia = data[0];
                return firstMedia.startDate ? firstMedia.startDate : "N/A";
              },
            },
            {
              data: "selectedMedia",
              render: function (data) {
                if (!data || data.length === 0) return "N/A";
            
                // Extract first media item’s endDate (or update logic as needed)
                const firstMedia = data[0];
                return firstMedia.endDate ? firstMedia.endDate : "N/A";
              },
            },            
            {
              data: "selectedMedia",
              render: function (data, type, row) {
                if (!data || data.length === 0) return "<span>No images</span>";
            
                // Count total media items (both images and videos)
                let totalMediaCount = data.reduce((count, media) => count + media.media.length, 0);
            
                return data
                  .map(
                    (media) => `
                      <div style="margin-bottom: 10px;">
                          <div style="display: flex; flex-wrap: wrap; gap: 10px;">
                              ${media.media
                                .filter((item) => item.mediaType === "image")
                                .map((image) => {
                                  const sequenceOptions = [...Array(totalMediaCount).keys()] // Generate up to totalMediaCount
                                    .map(
                                      (num) =>
                                        `<option value="${num + 1}" ${
                                          image.sequenceNumber === num + 1 ? "selected" : ""
                                        }>${num + 1}</option>`
                                    )
                                    .join("");
            
                                  // Disable Inactive option if sequence is 1
                                  const isDisabled = image.sequenceNumber === 1 ? "disabled" : "";
                                  return `
                                    <div style="width: 32%; text-align: center;">
                                        <img src="${image.filePath}" width="100" style="display: block; margin: auto;" />
                                        <div>Seq: 
                                          <select class="sequence-select" data-id="${row._id}" data-type="image" data-old-seq="${image.sequenceNumber}">
                                            ${sequenceOptions}
                                          </select>
                                        </div>
                                        <div>Status: 
                                          <select class="media-status" data-id="${row._id}" data-type="image" data-sequence="${image.sequenceNumber}">
                                            <option value="Active" ${image.status === "Active" ? "selected" : ""}>Active</option>
                                            <option value="Inactive" ${image.status === "Inactive" ? "selected" : ""} ${isDisabled}>Inactive</option>
                                          </select>
                                        </div>
                                    </div>
                                  `;
                                })
                                .join("")}
                          </div>
                      </div>
                    `
                  )
                  .join("");
              },
            },
            {
              data: "selectedMedia",
              render: function (data, type, row) {
                if (!data || data.length === 0) return "<span>No videos</span>";
            
                // Count total media items (both images and videos)
                let totalMediaCount = data.reduce((count, media) => count + media.media.length, 0);
            
                return data
                  .map(
                    (media) => `
                      <div>
                          <div>
                              ${media.media
                                .filter((item) => item.mediaType === "video")
                                .map((video) => {
                                  const sequenceOptions = [...Array(totalMediaCount).keys()] // Generate up to totalMediaCount
                                    .map(
                                      (num) =>
                                        `<option value="${num + 1}" ${
                                          video.sequenceNumber === num + 1 ? "selected" : ""
                                        }>${num + 1}</option>`
                                    )
                                    .join("");
            
                                  // Disable Inactive option if sequence is 1
                                  const isDisabled = video.sequenceNumber === 1 ? "disabled" : "";
            
                                  return `
                                    <div>
                                        <a href="${video.filePath}" target="_blank">Watch Video</a>
                                        <div>Seq: 
                                          <select class="sequence-select" data-id="${row._id}" data-type="video" data-old-seq="${video.sequenceNumber}">
                                            ${sequenceOptions}
                                          </select>
                                        </div>
                                        <div>Status: 
                                          <select class="media-status" data-id="${row._id}" data-type="video" data-sequence="${video.sequenceNumber}">
                                            <option value="Active" ${video.status === "Active" ? "selected" : ""}>Active</option>
                                            <option value="Inactive" ${video.status === "Inactive" ? "selected" : ""} ${isDisabled}>Inactive</option>
                                          </select>
                                        </div>
                                    </div>
                                  `;
                                })
                                .join("<br>")}
                          </div>
                      </div>
                    `
                  )
                  .join("");
              },
            },
            {
              data: "_id",
              render: function (data) {
                return data
                  ? `<button type="button" class="delete btn btn-danger btn-xs" data-id="${data}">
                                        <i class="fa fa-trash"></i> Delete
                                    </button>`
                  : "";
              },
            },
          ],
          order: [[0, "desc"]],
          columnDefs: [{ searchable: false, orderable: false, targets: [0] }],
          pageLength: 25,
          lengthMenu: [
            [25, 50, 100, 200, -1],
            [25, 50, 100, 200, "All"],
          ],
          fnRowCallback: function (nRow, aData, iDisplayIndex) {
            $("td:first", nRow).html(iDisplayIndex + 1);
            return nRow;
          },
        });

        // Update media status on change
        $("#ads_table tbody").on("change", ".media-status", function () {
          var addId = $(this).data("id");
          var mediaType = $(this).data("type");
          var sequenceNumber = $(this).data("sequence");
          var status = $(this).val();

          console.log({ addId, mediaType, sequenceNumber, status });

          $.ajax({
            type: "POST",
            url: "/adds/updateSelectedMediaStatus",
            contentType: "application/json",
            data: JSON.stringify({ addId, mediaType, sequenceNumber, status }),
            success: function (response) {
              alert(response.message);
              ajax_ads_table.ajax.reload(); // Refresh table after update
            },
            error: function (xhr) {
              alert("Error updating media status: " + xhr.responseText);
            },
          });
        });

        $("#ads_table tbody").on("change", ".sequence-select", function () {
          var addId = $(this).data("id");
          var mediaType = $(this).data("type");
          var oldSequence = $(this).data("old-seq");
          var newSequence = $(this).val();

          if (oldSequence == newSequence) return; // No change

          $.ajax({
            type: "POST",
            url: "/adds/updateMediaSequence",
            contentType: "application/json",
            data: JSON.stringify({
              addId,
              mediaType,
              oldSequence,
              newSequence,
            }),
            success: function (response) {
              alert(response.message);
              $("#ads_table").DataTable().ajax.reload();
            },
            error: function (xhr) {
              alert("Error updating sequence: " + xhr.responseText);
            },
          });
        });

        // Delete button event handler
        $("#ads_table tbody").on("click", ".delete", function () {
          var addId = $(this).data("id"); // Ensure addId is correctly retrieved

          if (!addId) {
            alert("Error: Ad ID is missing.");
            return;
          }

          if (confirm("Are you sure you want to delete this ad?")) {
            $.ajax({
              type: "DELETE",
              url: "/adds/delete-selected-media/" + addId, // Send addId as a URL parameter
              success: function (response) {
                alert(response.message);
                ajax_ads_table.ajax.reload(); // Refresh table after deletion
              },
              error: function (xhr) {
                alert("Error deleting ad: " + xhr.responseText);
              },
            });
          }
        });
      });
    </script>
  </body>
</html>
